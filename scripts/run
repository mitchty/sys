#!/usr/bin/env ksh
#-*-mode: Shell-script; coding: utf-8;-*-
script=$(basename $0)
dir=$(cd $(dirname $0); pwd)
iam=${dir}/${script}
gccgo=${gccgo:=yes} # if anything else, will not use gccgo even if present

PATH=${PATH}:${dir}
task=$script
name=$1
name=${name:=unknown}

gitfile=git/git.go
echo "$(scripts/git.sh)" > ${gitfile}

type go > /dev/null 2>&1
if [[ $? == 0 ]]; then
  usegccgo= # use gccgo to compile if its present, cause faster runtime
  type gccgo > /dev/null 2>&1
  [[ $gccgo == 'yes' && $? == 0 ]] && usegccgo=yes
  
  cd ${dir}
  args=""
  if [[ $task == 'build' ]]; then
    cd main
    args="-o ${dir}/${name}"
  elif [[ $task == 'test' ]]; then
    args="$(find . -name '*_test.go' -type f)"
  fi

  if [[ $usegccgo == 'yes' ]]; then
    go ${task} --compiler=gccgo --gccgoflags "--static -O4" ${args}
  else
    go ${task} ${args}
  fi
  cd ${dir}/..
  exit $?
fi

echo "no go executable found to build anything with, fix it then rerun"
exit 1
